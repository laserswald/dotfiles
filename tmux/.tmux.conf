# Sensible options.
set-option -g prefix C-a
set-option -g default-shell $SHELL
set -g base-index 1
set -g pane-base-index 1
set -g set-titles on
set -g set-titles-string "tmux: #T"
set -g status-position top
set -g mouse on
set -g default-terminal "xterm-256color"
set -g focus-events on

# vi mode
set -g status-keys vi
setw -g mode-keys vi

# Theming
set -g status-left "#[fg=cyan] #S "
set -g status-right "#[fg=blue,bold] #H "
set -g status-justify centre
set -g status-bg "black"
setw -g window-status-format "#[fg=brightblack] #I #W "
setw -g window-status-current-format "#[fg=brightcyan,bold] #I #W "
set -g pane-border-style fg='brightblack'
set -g pane-active-border-style fg=brightred

bind | split-window -h
bind - split-window -v
bind -n ^J move-pane -vt "{down-of}"
bind -n ^K move-pane -v -b -t .-1
bind -n ^L move-pane -vt "{right-of}"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# extra bindi:           kngs
# Reload config file
bind R source-file ~/.tmux.conf \; display-message "Config reloaded."

# Create lower console
bind C split-window -v \; resize-pane -y 15
bind ^A last-pane

set-option -g renumber-windows on
# TODO: Make a controller script. tmuxc.sh

set -sg escape-time 10

